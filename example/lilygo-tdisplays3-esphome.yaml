esphome:
  name: s3-touch
  friendly_name: ESP32-S3 Touch T-Display
  platformio_options:
    board_build.f_flash: 80000000L
    board_build.partitions: default_16MB.csv
    board_build.arduino.memory_type: qio_opi

external_components:
  - source: "github://landonr/lilygo-tdisplays3-esphome"
    components: [tdisplays3]

esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino
  flash_size: 16MB

# Enable logging
logger:

#if CONFIG_HA
# Enable Home Assistant API
api:

ota:
  platform: esphome
  password: "6ada29f6f41ce1685d29d406efd25fa4"
#endif // CONFIG_HA

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "S3 Fallback Hotspot"
    password: "zQ9tuPKIfFMu"

#if CONFIG_HA
time:
  - platform: homeassistant
    id: ha_time
#endif // CONFIG_HA

binary_sensor:
  - platform: gpio
    pin:
      number: _PIN_BUTTON_1
      inverted: true
    name: "Button 1"
  - platform: gpio
    pin:
      number: _PIN_BUTTON_2
      inverted: true
    name: "Button 2"

output:
  - platform: ledc
    pin: _PIN_BACKLIGHT
    id: gpio38
    frequency: 2000

light:
  - platform: monochromatic
    output: gpio38
    name: "Backlight"
    restore_mode: RESTORE_DEFAULT_ON

# You can either setup the backlight as a switch like below or make it dimmable using a light output like above
# switch:
#   - platform: gpio
#     pin: _PIN_BACKLIGHT
#     name: "Backlight"
#     id: gpio38
#     internal: true
#     restore_mode: RESTORE_DEFAULT_ON

font:
  - file: "gfonts://Roboto"
    id: roboto
    size: 30

#if CONFIG_DISPLAY
display:
  - platform: tdisplays3
    id: disp
    update_interval: 1s
    rotation: 270
    lambda: |-
#if CONFIG_HA
      it.printf(20, 70, id(roboto), Color(255, 0, 0), id(ha_time).now().strftime("%Y-%m-%d %H:%M:%S").c_str());
#else  // !CONFIG_HA
      it.printf(20, 70, id(roboto), Color(255, 0, 0), "HA not configured");
#endif // !CONFIG_HA

i2c:
  scl: _PIN_I2C_SCL
  sda: _PIN_I2C_SDA

touchscreen:
  - platform: tdisplays3
    interrupt_pin: _PIN_TOUCHSCREEN_INT
    address: 0x15
    id: my_touchscreen
    display: disp
    transform:
      swap_xy: true
      mirror_y: true
    on_touch:
      - lambda: |-
         auto touch_point = id(my_touchscreen).get_touches()[0];
         ESP_LOGI("tdisplays3-touch", "x:%d, y:%d",
           touch_point.x,
           touch_point.y
         );
      # - switch.toggle: backlight
 
#endif // CONFIG_DISPLAY
